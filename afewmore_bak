#! /bin/bash

# add local ip to inbound rule of security group
ADD_RES=$(aws ec2 authorize-security-group-ingress --group-id $CONFIG_SEC --protocol tcp --port 22 --cidr "$IP/32" 2>&1)

init_aws() {
    if [ $(whereis aws | wc -m) -lt 6 ]; then
        log "aws not installed, start installing now"
        sudo apt-get install awscli -y
    fi

    if [ $(aws --version 2>&1 | grep "unknown locale" | wc -m) -gt 0 ]; then
        echo -e "export LC_ALL=en_US.UTF-8\nexport LANG=en_US.UTF-8" >> ~/.bash_profile && source ~/.bash_profile
    fi

    log "aws" $(aws --version 2>&1 | awk -F '[/ ]' '{ print $2 }') "installed"

    if [[ $(cat ~/.aws 2>&1) != *"Is a directory"* ]]; then
      log "aws not configured, start configuring now"
      aws configure
    fi
}


authenticate_slaves() {
    for SLAVE in $SLAVES
    do
        addtoknow_hosts $SLAVE
    done
}

addtoknow_hosts() {
    myhostname=`aws ec2 describe-instances --instance-ids $1 --query 'Reservations[0].Instances[0].PublicDnsName' | sed -e 's/^"//' -e 's/"$//'`
    key=`ssh-keyscan -t rsa -H ${myhostname} 2> /dev/null`
    echo ${key} >> ~/.ssh/known_hosts
}

get_slaves_id() {
    IDS=$(aws ec2 describe-instances --instance-ids $SLAVES --query 'Reservations[*].Instances[*].InstanceId')
    IDS=$(echo $IDS | tr -d '[]",')

    SLAVE_ID_IDX=0
    for ID in $IDS
    do
        SLAVE_IDS[$SLAVE_ID_IDX]=$ID

        if [[ $OPTION_VERB == true ]]; then
            log "obtained target ids " ${SLAVE_IDS[$SLAVE_ID_IDX]}
        fi

        ((SLAVE_ID_IDX++))
    done    
}